#!/bin/bash

# Stop on undefined variables or errors
set -euo pipefail

# Compare the db-schema of the current installation
# to the db-schema you get by taking an installation of the previous release
# and applying all upgrade-scripts in the current/in-progress release.
#
# (Do the upgrade-scripts accurately reflect all the necessary changes,
# or did we sneak a db-schema change into the current installation,
# and are perhaps now depending on it?)

prev_tag=R202309
curr_tag=master
upgrade_number=20

setup_dir=$(realpath $(dirname $0))
testing_dir=/tmp/dp_schema_check
testing_code_dir=$testing_dir/c
testing_db_name=temp_dp_schema_check

db_server='<<DB_SERVER>>'
db_user='<<DB_USER>>'
db_password='<<DB_PASSWORD>>'
php_cli_exec='<<PHP_CLI_EXECUTABLE>>'

mkdir -p $testing_dir

echo ""
echo "Dumping the schema of the current database..."
$setup_dir/dump_db_schema --table-list-from-db > $testing_dir/current_schema_dump

echo ""
echo "Creating a config file for a test install..."
echo "
    TAG=$curr_tag
    GROUP=www-data
    SHIFT_TO_LIVE=yes

    _CODE_DIR=$testing_code_dir
    _DB_NAME=$testing_db_name
    _DB_SERVER=$db_server
    _DB_USER=$db_user
    _DB_PASSWORD='$db_password'

    # Need to set booleans/integers, otherwise site_vars.php will raise syntax errors.
    _TESTING=true
    _USE_SECURE_COOKIES=true
    _MAINTENANCE=false
    _AUTO_POST_TO_PROJECT_TOPIC=false
    _ORDINARY_USERS_CAN_SEE_QUEUE_SETTINGS=true
    _PUBLIC_PAGE_DETAILS=false
    _ARCHIVE_DB_NAME=ARCHIVE_DB_NAME
    _API_ENABLED=false
    _API_RATE_LIMIT=0
    _API_RATE_LIMIT_REQUESTS_PER_WINDOW=0
    _API_RATE_LIMIT_SECONDS_IN_WINDOW=0

    # String values
    _FORUM_TYPE='phpbb3'
    _DEFAULT_CHAR_SUITES='[ \"basic-latin\" ]'
    _PHPMAILER_SMTP_CONFIG='[]'

    # For update_phpbb_posts_text.php
    _FORUMS_PROJECT_WAITING_IDX=99
    _FORUMS_PROJECT_AVAIL_IDX=99
    _FORUMS_PROJECT_PP_IDX=99
    _FORUMS_PROJECT_POSTED_IDX=99
" > $testing_dir/config.sh

echo "Getting a test copy of the '$curr_tag' code..."
$setup_dir/update_from_github $testing_dir/config.sh

echo ""
echo "Getting db_schema.sql from the '$prev_tag' release..."
cd $testing_code_dir
# check out $prev_tag and stash off db_schema.sql
git checkout -q $prev_tag
cp `find $testing_code_dir -name db_schema.sql` /tmp/db_schema.sql
# check out $curr_tag and replace db_schema.sql with stashed copy
git checkout -q $curr_tag
testing_code_setup_dir=`find $testing_code_dir -name SETUP -type d`
mv /tmp/db_schema.sql $testing_code_setup_dir/db_schema.sql

echo ""
echo "Applying configuration..."
$testing_code_setup_dir/configure $testing_dir/config.sh $testing_code_dir

echo ""
cd $testing_code_setup_dir

echo ""
echo "Creating and/or cleaning out the test database..."
mysql -h $db_server -u $db_user -p"$db_password" -e "DROP   DATABASE $testing_db_name"
mysql -h $db_server -u $db_user -p"$db_password" -e "CREATE DATABASE $testing_db_name"
if [ $? != 0 ]; then
    echo "CREATE DATABASE failed."
    echo "Probably some sufficiently powerful MySQL user will have to invoke:"
    echo "    GRANT ALL ON $testing_db_name.* TO $db_user@$db_server IDENTIFIED BY '$db_password'"
    exit 1
fi

echo ""
echo "Running install_db.php to set up test db..."
$php_cli_exec ./install_db.php

echo ""
echo "Applying all upgrade scripts..."
cd $testing_code_setup_dir/upgrade/$upgrade_number
for f in *.php; do
    # comment out any immediate die()s or exit()s -- we want to continue even if
    # a user might want to double-check on a real site
    sed -i 's/^die()/#die()/' $f
    sed -i 's/^exit(/#exit(/' $f

    # now run the script
    echo ""
    echo "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
    echo $f
    echo ""
    $php_cli_exec $f
done
echo ""
echo "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
cd $testing_code_setup_dir

echo ""
echo "Dumping the schema of the resulting database..."
if [ -e $testing_dir/upgraded_schema_dump ]; then
    mv $testing_dir/upgraded_schema_dump $testing_dir/upgraded_schema_dump.bak
fi
$setup_dir/dump_db_schema --table-list-from-db $testing_db_name > $testing_dir/upgraded_schema_dump

echo ""
echo "Compare the two schemas, eg:"
echo "    diff $testing_dir/current_schema_dump $testing_dir/upgraded_schema_dump"
echo "    vim -d $testing_dir/current_schema_dump $testing_dir/upgraded_schema_dump"

echo ""
echo "When you're done, don't forget to..."
echo "    rm -rf $testing_dir"
echo "    DROP DATABASE $testing_db_name;"
