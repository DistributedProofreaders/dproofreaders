openapi: 3.0.1
info:
  title: Distributed Proofreaders API
  description: An API to access various components in the DP system.
  contact:
    name: Distributed Proofreaders
    url: https://www.pgdp.net
  license:
    name: GPL2
    url: http://opensource.org/licenses/GPL-2.0
  version: 1.0.0

servers:
- url: https://www.pgdp.net/api/v1
  description: Production
- url: https://www.pgdp.org/api/v1
  description: Test
- url: https://www.pgdp.org/api-dev/v1
  description: Development

paths:
  /projects:
    get:
      tags:
      - project
      description: Search for projects. If different parameters are included
        they are ANDed together. To send multiple values of the same parameter
        to OR together, append the name with [] (e.g. projectid[]).
      parameters:
      - name: projectid
        in: query
        schema:
          type: string
      - name: title
        in: query
        schema:
          type: string
        description: Title is treated as a subsearch
      - name: author
        in: query
        schema:
          type: string
        description: Author is treated as a subsearch
      - name: languages
        in: query
        schema:
          type: string
        description: Languages is treated as a subsearch
      - name: genre
        in: query
        schema:
          type: string
      - name: difficulty
        in: query
        schema:
          type: string
      - name: special_day
        in: query
        schema:
          type: string
      - name: project_manager
        in: query
        schema:
          type: string
      - name: pg_ebook_number
        in: query
        schema:
          type: integer
      - name: state
        in: query
        schema:
          type: string
      responses:
        200:
          description: List of projects found in search
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/project'
          headers:
            Links:
              schema:
                type: string
              description: Links for accessing paginated response
            X-Results-Total:
              schema:
                type: integer
              description: Total number of projects matching query
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/charsuites:
    get:
      tags:
      - project
      description: Returns a list of valid project character suites
      parameters:
      - name: enabled
        in: query
        description: Only return enabled character suites
        required: false
        schema:
          type: boolean
      responses:
        200:
          description: List of valid character suites
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/charsuite'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/difficulties:
    get:
      tags:
      - project
      description: Returns a list of valid project difficulties
      responses:
        200:
          description: List of difficulties
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/genres:
    get:
      tags:
      - project
      description: Returns a list of valid project genres
      responses:
        200:
          description: List of genres
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/imagesources:
    get:
      tags:
      - project
      description: Returns a list of valid project image sources
      parameters:
      - name: enabled
        in: query
        description: Only return enabled image sources
        required: false
        schema:
          type: boolean
      responses:
        200:
          description: List of valid image sources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/image_source'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/languages:
    get:
      tags:
      - project
      description: Returns a list of valid project languages
      responses:
        200:
          description: List of languages
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/pagerounds:
    get:
      tags:
      - project
      description: Returns a list of valid page rounds
      responses:
        200:
          description: List of page rounds
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/specialdays:
    get:
      tags:
      - project
      description: Returns a list of valid special days
      parameters:
      - name: enabled
        in: query
        description: Only return enabled special days
        required: false
        schema:
          type: boolean
      responses:
        200:
          description: List of special days
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/special_day'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/states:
    get:
      tags:
      - project
      description: Returns a list of valid project states
      responses:
        200:
          description: List of states
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/holdstates:
    get:
      tags:
      - project
      description: Returns a list of holdable project states
      responses:
        200:
          description: List of holdable states
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/{projectid}:
    get:
      tags:
      - project
      description: Returns details about a project
      parameters:
      - name: projectid
        in: path
        description: ID of project to return
        required: true
        schema:
          type: string
      responses:
        200:
          description: project response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/{projectid}/holdstates:
    get:
      tags:
      - project
      description: Returns a list of hold states for the project
      parameters:
      - name: projectid
        in: path
        description: ID of project
        required: true
        schema:
          type: string
      responses:
        200:
          description: List of current project hold states
          content:
            application/json:
              schema:
                items:
                  type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'
    put:
      tags:
      - project
      description: Sets the holdable states for a project
      parameters:
      - name: projectid
        in: path
        description: ID of project
        required: true
        schema:
          type: string
      requestBody:
        description: List of holdable states to set
        required: true
        content:
          application/json:
            schema:
              items:
                type: string
      responses:
        200:
          description: List of current project hold states
          content:
            application/json:
              schema:
                items:
                  type: string
        '400':
          $ref: '#/components/responses/InvalidValue'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/{projectid}/wordlists/{type}:
    get:
      tags:
      - project
      description: Gets a project's word list
      parameters:
      - name: projectid
        in: path
        description: ID of project
        required: true
        schema:
          type: string
      - name: type
        in: path
        description: Word list type
        required: true
        schema:
          type: string
          enum: [good, bad]
      responses:
        200:
          description: Requested project word list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wordlist'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'
    put:
      tags:
      - project
      description: Replaces a project's word list
      parameters:
      - name: projectid
        in: path
        description: ID of project
        required: true
        schema:
          type: string
      - name: type
        in: path
        description: Word list type
        required: true
        schema:
          type: string
          enum: [good, bad]
      requestBody:
        description: List of replacement words
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wordlist'
        required: true
      responses:
        200:
          description: wordlist saved
          content: {}
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/{projectid}/pages:
    get:
      tags:
      - project
      description: Gets a list of project pages
      parameters:
      - name: projectid
        in: path
        description: ID of project
        required: true
        schema:
          type: string
      responses:
        200:
          description: List of a project's page names
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/project_page_index'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/{projectid}/pagedetails:
    get:
      tags:
      - project
      description: Gets all details about a project's pages
      parameters:
      - name: projectid
        in: path
        description: ID of project
        required: true
        schema:
          type: string
      responses:
        200:
          description: Page details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/project_page_detail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/{projectid}/pages/{pagename}/pagerounds/{pageroundid}:
    get:
      tags:
      - project
      description: Gets a project page text in a given pageround
      parameters:
      - name: projectid
        in: path
        description: ID of project
        required: true
        schema:
          type: string
      - name: pagename
        in: path
        description: Name of page
        required: true
        schema:
          type: string
      - name: pageroundid
        in: path
        description: Page round ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Project page information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project_page'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/badnessreasons:
    get:
      tags:
      - project
      description: Gets a list of reasons to mark a page as bad
      responses:
        200:
          description: List of reasons
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/{projectid}/codepoints:
    get:
      tags:
      - project
      description: Gets valid codepoints for the project
      parameters:
      - name: projectid
        in: path
        description: ID of project
        required: true
        schema:
          type: string
      responses:
        200:
          description: List of codepoints
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/{projectid}/pickersets:
    get:
      tags:
      - project
      description: Gets pickersets for the project
      parameters:
      - name: projectid
        in: path
        description: ID of project
        required: true
        schema:
          type: string
      responses:
        200:
          description: pickersets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pickersets'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        429:
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /rounds/{roundid}:
    get:
      tags:
      - project
      description: Gets round information
      parameters:
      - name: roundid
        in: path
        description: The round identifier (as defined by array_keys($Round_for_round_id_)
        required: true
        schema:
          type: string
      responses:
        200:
          description: Round data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/round_data'
        404:
          $ref: '#/components/responses/NotFound'
        429:
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /proofrounds/{proofroundid}/proofprojects/{proofprojectid}/proofpages:
    post:
      tags:
      - project
      description: Checks out a page for proofreading
      parameters:
      - name: proofroundid
        in: path
        description: The round identifier (as defined by array_keys($Round_for_round_id_)
        required: true
        schema:
          type: string
      - name: proofprojectid
        in: path
        description: The project id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Page data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/proof_page'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        429:
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /proofrounds/{proofroundid}/proofprojects/{proofprojectid}/proofpages/{proofpage}:
    put:
      tags:
      - project
      description: save the text and/or possibly change state
      parameters:
      - name: proofroundid
        in: path
        description: The round identifier (as defined by array_keys($Round_for_round_id_)
        required: true
        schema:
          type: string
      - name: proofprojectid
        in: path
        description: The project id
        required: true
        schema:
          type: string
      - name: proofpage
        in: path
        description: the name of the page, must be in temp state and owned by user
        required: true
        schema:
          type: string
      requestBody:
        description: data for operation
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/page_save'
                - $ref: '#/components/schemas/page_return'
                - $ref: '#/components/schemas/page_mark_bad'
      responses:
        200:
          description: operation success
          content: {}
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        422:
          description: Page data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/proof_page'
        429:
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /proofrounds/{proofroundid}/proofprojects/{proofprojectid}/ownedpages/{ownedpage}:
    put:
      tags:
      - project
      description: make page available for proofreading, change state to temp if necessary
      parameters:
      - name: proofroundid
        in: path
        description: The round identifier (as defined by array_keys($Round_for_round_id_)
        required: true
        schema:
          type: string
      - name: proofprojectid
        in: path
        description: The project id
        required: true
        schema:
          type: string
      - name: ownedpage
        in: path
        description: the name of the page, must be in temp state of saved state and owned by user
        required: true
        schema:
          type: string
      responses:
        200:
          description: Page data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/proof_page'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        429:
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /proofrounds/{proofroundid}/proofprojects/{proofprojectid}/proofpages/{proofpage}/pageoptions/{pageoption}:
    get:
      tags:
      - project
      description: get page text from either current or previous round
      parameters:
      - name: proofroundid
        in: path
        description: The round identifier (as defined by array_keys($Round_for_round_id_)
        required: true
        schema:
          type: string
      - name: proofprojectid
        in: path
        description: The project id
        required: true
        schema:
          type: string
      - name: proofpage
        in: path
        description: the name of the page, must be in temp state and owned by user
        required: true
        schema:
          type: string
      - name: pageoption
        in: path
        description: current or original
        required: true
        schema:
          type: string
      responses:
        200:
          description: Page text
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page_text'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        429:
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /projects/{projectid}/wordcheck:
    put:
      tags:
      - project
      description: checks text for bad words
      parameters:
      - name: projectid
        in: path
        description: ID of project
        required: true
        schema:
          type: string
      requestBody:
        description: text to check
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/page_check'
      responses:
        200:
          description: description of checked text
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checked_text'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        429:
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /proofrounds/{proofroundid}/proofprojects/{proofprojectid}/proofpages/{proofpage}/suggestions:
    put:
      tags:
      - project
      description: submit suggested words for the page
      parameters:
      - name: proofroundid
        in: path
        description: The round identifier (as defined by array_keys($Round_for_round_id_)
        required: true
        schema:
          type: string
      - name: proofprojectid
        in: path
        description: The project id
        required: true
        schema:
          type: string
      - name: proofpage
        in: path
        description: the name of the page, must be in temp state and owned by user
        required: true
        schema:
          type: string
      requestBody:
        description: array of suggested words
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/suggestions'
      responses:
        200:
          description: operation success
          content: {}
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        429:
          $ref: '#/components/responses/RateLimitExceeded'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /stats/site:
    get:
      tags:
      - stats
      description: Get site statistics
      responses:
        200:
          description: Site statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/site_stats'

  /stats/site/rounds:
    get:
      tags:
      - stats
      description: Gets the site statistics for all rounds
      responses:
        200:
          description: Requested round statistics
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/round_stats'

  /stats/site/rounds/{roundid}:
    get:
      tags:
      - stats
      description: Gets the site statistics for a round
      parameters:
      - name: roundid
        in: path
        description: Round ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Requested round statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/round_stats'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY

  schemas:
    project:
      required:
      - projectid
      - title
      type: object
      properties:
        projectid:
          type: string
        title:
          type: string
        author:
          type: string
        languages:
          type: array
          items:
            type: string
        genre:
          type: string
        difficulty:
          type: string
        special_day:
          type: string
        project_manager:
          type: string
        post_processor:
          type: string
        post_process_verifier:
          type: string
        image_preparer:
          type: string
        text_preparer:
          type: string
        image_source:
          type: string
        pages_available:
          type: integer
        pages_total:
          type: integer
        pg_ebook_number:
          type: integer
        state:
          type: string
          readOnly: true
        last_state_change_time:
          type: string
          format: dateTime
          readOnly: true
        last_page_done_time:
          type: string
          format: dateTime
          readOnly: true
        last_edit_time:
          type: string
          format: dateTime
          readOnly: true
      description: A project represents a unique project object in the system. It
        includes a great deal of information, some fields of which are calculated
        and not directly modifiable. Not all fields are available to all users. Fields
        the user does not have access to will not be returned.

    project_page_index:
      required:
      - image
      - image_url
      - image_size
      type: object
      properties:
        image:
          type: string
        image_url:
          type: string
          format: url
        image_size:
          type: integer
          description: Image size in bytes

    project_page_detail:
      required:
      - image
      - image_url
      - image_size
      - state
      type: object
      properties:
        image:
          type: string
        image_url:
          type: string
          format: url
        image_size:
          type: integer
          description: Image size in bytes
        state:
          type: string
        pagerounds:
          type: array
          items:
            $ref: '#/components/schemas/project_page_round_detail'

    project_page_round_detail:
      type: object
      required:
      - page_round
      - page_size
      properties:
        pageround:
          type: string
        page_size:
          type: integer
          description: Page size in bytes
        is_diff:
          type: boolean
          description: Is there a diff between this and the prior round
        user_page_tally:
          type: integer
          description: Number of pages proofer has proofed in this round
        wordcheck_ran:
          type: boolean
          description: Was WordCheck run on the page
        last_modified:
          type: string
          format: dateTime

    project_page:
      required:
      - pagename
      type: object
      properties:
        pagename:
          type: string
        image_url:
          type: string
        text:
          type: string
        state:
          type: string

    proof_page:
      type: object
      properties:
        pagename:
          type: string
        image_url:
          type: string
        text:
          type: string

    page_text:
      type: object
      properties:
        text:
          type: string

    round_data:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          description: the translated description
        formatting:
          type: boolean
          description: true if it is a formatting round
        document:
          type: string
          description: url of the guidelines for the round

    page_check:
      description: check text using given languages and ad hoc good words
      type: object
      properties:
        text:
          type: string
        auxlanguage:
          type: string
        adhocgoodwords:
          type: array
          items:
            type: string

    page_save:
      type: object
      properties:
        new_page_state:
          type: string
          description: saved or temp
        text:
          type: string
          description: text to save

    page_return:
      type: object
      properties:
        new_page_state:
          type: string
          description: avail

    page_mark_bad:
      type: object
      properties:
        new_page_state:
          type: string
          description: bad
        reason:
          type: integer
          description: index into array of reasons

    pickersets:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          subsets:
            type: array
            items:
              oneOf:
                - type: string
                - type: array
                  items:
                    type: array
                    items:
                      type: string

    checked_text:
      description: encoded checked text
      type: object
      properties:
        mark_array:
          type: array
          items:
            type: array
            items:
              oneOf:
                - type: string
                - type: integer
        languages:
          type: array
          items:
            type: string

    suggestions:
      description: list of words
      type: object
      properties:
        suggestions:
          type: array
          items:
            type: string

    charsuite:
      required:
      - id
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        characters:
          type: array
          items:
            type: string
        enabled:
          type: boolean

    image_source:
      required:
      - id
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        name_full:
          type: string
        url:
          type: string
          format: url
        credit:
          type: string
        enabled:
          type: boolean

    site_stats:
      type: object
      properties:
        server_time:
          type: string
          format: dateTime
          readOnly: true
        registered_users:
          type: integer
          readOnly: true
        active_users_1_day:
          type: integer
          readOnly: true
        active_users_7_day:
          type: integer
          readOnly: true
        active_users_30_day:
          type: integer
          readOnly: true
      description: Statistics for the site

    special_day:
      type: object
      required:
      - id
      properties:
        id:
          type: string
        name:
          type: string
        comment:
          type: string
        url:
          type: string
          format: url
        color:
          type: string
        symbol:
          type: string
        date_open_month:
          type: integer
          description: Month the special day opens
        date_open_day:
          type: integer
          description: Day of the month the special day opens
        date_close_month:
          type: integer
          description: Month the special day closes
        date_close_day:
          type: integer
          description: Day of the month the special day closes
        enabled:
          type: boolean

    round_stats:
      type: object
      properties:
        today_goal:
          type: integer
          readOnly: true
        today_actual:
          type: integer
          readOnly: true
        yesterday_goal:
          type: integer
          readOnly: true
        yesterday_actual:
          type: integer
          readOnly: true
        month_goal:
          type: integer
          readOnly: true
        month_actual:
          type: integer
          readOnly: true
        positive_users:
          type: integer
          readOnly: true
      description: Statistics for a round

    wordlist:
      type: array
      items:
        type: string

    Error:
      required:
      - message
      type: object
      properties:
        message:
          type: string

  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidValue:
      description: Invalid Value
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnexpectedError:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    RateLimitExceeded:
      description: Rate Limit Exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

security:
  - ApiKeyAuth: []
